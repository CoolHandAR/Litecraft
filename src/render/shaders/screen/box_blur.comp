#version 460 core

layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(rgba16f, binding = 0) writeonly restrict uniform image2D outputImage;

uniform sampler2D source_texture;

uniform int u_size;
uniform vec2 u_dir;
uniform float u_blurScale;

void main()
{
    ivec2 iCoords = ivec2(gl_GlobalInvocationID.xy);

    vec2 texSize = textureSize(source_texture, 0);

    //Make sure we are not processing more than we need to
    if (any(greaterThanEqual(iCoords, texSize))) 
    { 
		return;
	}

    vec2 coords = (vec2(iCoords + 0.5) / vec2(texSize));
    vec2 pixel_size = 1.0 / texSize;

    int half_size = u_size / 2;
    vec2 texelSize = 1.0 / vec2(texSize);
    vec4 result = vec4(0.0);
    vec2 blur_dir = u_dir * pixel_size;

    for(int i = -half_size; i < half_size; i++)
    {   
    	if(i == 0)
		{
			continue;
		}

        float radius = float(i) * u_blurScale;
        vec2 coord_of = coords + blur_dir * radius;

        result += texture(source_texture, coord_of);
    }

    vec4 final_result = result / (u_size);
   
    imageStore(outputImage, ivec2(gl_GlobalInvocationID.xy), final_result);
}
